const {Asset} = require('stellar-base')
const {DexTradesAggregator} = require('../src/dex-trades-aggregator')

describe('DexTradesAggregator', () => {
    const issuer = 'GB37DH4CM64RFUJ4LVNGTECDITMYELOBFUW7CR36644JZMFYZA3UBHQW'
    const baseAsset = new Asset('X', issuer)
    const trackedAssets = [
        //two assets involved in trades
        new Asset('B', issuer),
        new Asset('C', issuer),
        //two no traded assets
        new Asset('Y', issuer),
        new Asset('W', issuer)]
    const prevPrices = [1000000000000000n, 2000000000000000n, 3000000000000000n] //W token has no prev price records
    const resPrices = [200602755686385n, 299101070927264n, 3000000000000000n, 0n]

    test('Aggregate ', () => {
        const aggregator = new DexTradesAggregator(baseAsset, trackedAssets)
        aggregator.processTxResult('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')
        aggregator.processTxResult('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')
        const aggResult = aggregator.aggregatePrices(prevPrices, 14n)
        expect(aggResult).toStrictEqual(resPrices)
    })
})